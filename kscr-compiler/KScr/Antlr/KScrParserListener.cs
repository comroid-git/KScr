//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/dev/KScr/grammar\KScrParser.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace KScr.Antlr {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="KScrParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface IKScrParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.packageDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageDecl([NotNull] KScrParser.PackageDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.packageDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageDecl([NotNull] KScrParser.PackageDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.imports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImports([NotNull] KScrParser.ImportsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.imports"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImports([NotNull] KScrParser.ImportsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.importDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportDecl([NotNull] KScrParser.ImportDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.importDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportDecl([NotNull] KScrParser.ImportDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.annotationArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationArg([NotNull] KScrParser.AnnotationArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.annotationArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationArg([NotNull] KScrParser.AnnotationArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] KScrParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] KScrParser.AnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modPublic</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModPublic([NotNull] KScrParser.ModPublicContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modPublic</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModPublic([NotNull] KScrParser.ModPublicContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modInternal</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModInternal([NotNull] KScrParser.ModInternalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modInternal</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModInternal([NotNull] KScrParser.ModInternalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modProtected</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModProtected([NotNull] KScrParser.ModProtectedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modProtected</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModProtected([NotNull] KScrParser.ModProtectedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modPrivate</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModPrivate([NotNull] KScrParser.ModPrivateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modPrivate</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModPrivate([NotNull] KScrParser.ModPrivateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modStatic</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModStatic([NotNull] KScrParser.ModStaticContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modStatic</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModStatic([NotNull] KScrParser.ModStaticContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modFinal</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModFinal([NotNull] KScrParser.ModFinalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modFinal</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModFinal([NotNull] KScrParser.ModFinalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modAbstract</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModAbstract([NotNull] KScrParser.ModAbstractContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modAbstract</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModAbstract([NotNull] KScrParser.ModAbstractContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modSyncronized</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModSyncronized([NotNull] KScrParser.ModSyncronizedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modSyncronized</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModSyncronized([NotNull] KScrParser.ModSyncronizedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>modNative</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModNative([NotNull] KScrParser.ModNativeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modNative</c>
	/// labeled alternative in <see cref="KScrParser.modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModNative([NotNull] KScrParser.ModNativeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModifiers([NotNull] KScrParser.ModifiersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.modifiers"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModifiers([NotNull] KScrParser.ModifiersContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ctClass</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtClass([NotNull] KScrParser.CtClassContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctClass</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtClass([NotNull] KScrParser.CtClassContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ctInterface</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtInterface([NotNull] KScrParser.CtInterfaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctInterface</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtInterface([NotNull] KScrParser.CtInterfaceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ctEnum</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtEnum([NotNull] KScrParser.CtEnumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctEnum</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtEnum([NotNull] KScrParser.CtEnumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ctAnnotation</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtAnnotation([NotNull] KScrParser.CtAnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctAnnotation</c>
	/// labeled alternative in <see cref="KScrParser.classType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtAnnotation([NotNull] KScrParser.CtAnnotationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.genericTypeUses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericTypeUses([NotNull] KScrParser.GenericTypeUsesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.genericTypeUses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericTypeUses([NotNull] KScrParser.GenericTypeUsesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>importedTypeName</c>
	/// labeled alternative in <see cref="KScrParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportedTypeName([NotNull] KScrParser.ImportedTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>importedTypeName</c>
	/// labeled alternative in <see cref="KScrParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportedTypeName([NotNull] KScrParser.ImportedTypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>normalTypeUse</c>
	/// labeled alternative in <see cref="KScrParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNormalTypeUse([NotNull] KScrParser.NormalTypeUseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>normalTypeUse</c>
	/// labeled alternative in <see cref="KScrParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNormalTypeUse([NotNull] KScrParser.NormalTypeUseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arrayTypeUse</c>
	/// labeled alternative in <see cref="KScrParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayTypeUse([NotNull] KScrParser.ArrayTypeUseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arrayTypeUse</c>
	/// labeled alternative in <see cref="KScrParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayTypeUse([NotNull] KScrParser.ArrayTypeUseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.rawType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRawType([NotNull] KScrParser.RawTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.rawType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRawType([NotNull] KScrParser.RawTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.genericTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericTypeDef([NotNull] KScrParser.GenericTypeDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.genericTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericTypeDef([NotNull] KScrParser.GenericTypeDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.genericTypeDefs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericTypeDefs([NotNull] KScrParser.GenericTypeDefsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.genericTypeDefs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericTypeDefs([NotNull] KScrParser.GenericTypeDefsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.objectExtends"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectExtends([NotNull] KScrParser.ObjectExtendsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.objectExtends"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectExtends([NotNull] KScrParser.ObjectExtendsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.objectImplements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectImplements([NotNull] KScrParser.ObjectImplementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.objectImplements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectImplements([NotNull] KScrParser.ObjectImplementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] KScrParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] KScrParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] KScrParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] KScrParser.ParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] KScrParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] KScrParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] KScrParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] KScrParser.StatementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.noBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoBlock([NotNull] KScrParser.NoBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.noBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoBlock([NotNull] KScrParser.NoBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.uniformBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniformBlock([NotNull] KScrParser.UniformBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.uniformBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniformBlock([NotNull] KScrParser.UniformBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.normalBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNormalBlock([NotNull] KScrParser.NormalBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.normalBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNormalBlock([NotNull] KScrParser.NormalBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.memberExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberExpr([NotNull] KScrParser.MemberExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.memberExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberExpr([NotNull] KScrParser.MemberExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.lambdaBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaBlock([NotNull] KScrParser.LambdaBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.lambdaBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaBlock([NotNull] KScrParser.LambdaBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseStmtBlock</c>
	/// labeled alternative in <see cref="KScrParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseStmtBlock([NotNull] KScrParser.CaseStmtBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseStmtBlock</c>
	/// labeled alternative in <see cref="KScrParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseStmtBlock([NotNull] KScrParser.CaseStmtBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseExprBlock</c>
	/// labeled alternative in <see cref="KScrParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseExprBlock([NotNull] KScrParser.CaseExprBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseExprBlock</c>
	/// labeled alternative in <see cref="KScrParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseExprBlock([NotNull] KScrParser.CaseExprBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memberNormalBlock</c>
	/// labeled alternative in <see cref="KScrParser.memberBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberNormalBlock([NotNull] KScrParser.MemberNormalBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberNormalBlock</c>
	/// labeled alternative in <see cref="KScrParser.memberBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberNormalBlock([NotNull] KScrParser.MemberNormalBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memberExprBlock</c>
	/// labeled alternative in <see cref="KScrParser.memberBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberExprBlock([NotNull] KScrParser.MemberExprBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberExprBlock</c>
	/// labeled alternative in <see cref="KScrParser.memberBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberExprBlock([NotNull] KScrParser.MemberExprBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memberNoBlock</c>
	/// labeled alternative in <see cref="KScrParser.memberBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberNoBlock([NotNull] KScrParser.MemberNoBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberNoBlock</c>
	/// labeled alternative in <see cref="KScrParser.memberBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberNoBlock([NotNull] KScrParser.MemberNoBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>codeNormalBlock</c>
	/// labeled alternative in <see cref="KScrParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeNormalBlock([NotNull] KScrParser.CodeNormalBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>codeNormalBlock</c>
	/// labeled alternative in <see cref="KScrParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeNormalBlock([NotNull] KScrParser.CodeNormalBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>codeStmtBlock</c>
	/// labeled alternative in <see cref="KScrParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeStmtBlock([NotNull] KScrParser.CodeStmtBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>codeStmtBlock</c>
	/// labeled alternative in <see cref="KScrParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeStmtBlock([NotNull] KScrParser.CodeStmtBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>codeNoBlock</c>
	/// labeled alternative in <see cref="KScrParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeNoBlock([NotNull] KScrParser.CodeNoBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>codeNoBlock</c>
	/// labeled alternative in <see cref="KScrParser.codeBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeNoBlock([NotNull] KScrParser.CodeNoBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.initDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitDecl([NotNull] KScrParser.InitDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.initDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitDecl([NotNull] KScrParser.InitDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.subConstructorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubConstructorCall([NotNull] KScrParser.SubConstructorCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.subConstructorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubConstructorCall([NotNull] KScrParser.SubConstructorCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.subConstructorCalls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubConstructorCalls([NotNull] KScrParser.SubConstructorCallsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.subConstructorCalls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubConstructorCalls([NotNull] KScrParser.SubConstructorCallsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.constructorDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstructorDecl([NotNull] KScrParser.ConstructorDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.constructorDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstructorDecl([NotNull] KScrParser.ConstructorDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDecl([NotNull] KScrParser.MethodDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDecl([NotNull] KScrParser.MethodDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.indexerMemberDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerMemberDecl([NotNull] KScrParser.IndexerMemberDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.indexerMemberDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerMemberDecl([NotNull] KScrParser.IndexerMemberDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.propGetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropGetter([NotNull] KScrParser.PropGetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.propGetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropGetter([NotNull] KScrParser.PropGetterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.propSetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropSetter([NotNull] KScrParser.PropSetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.propSetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropSetter([NotNull] KScrParser.PropSetterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.propInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropInit([NotNull] KScrParser.PropInitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.propInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropInit([NotNull] KScrParser.PropInitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>propComputed</c>
	/// labeled alternative in <see cref="KScrParser.propBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropComputed([NotNull] KScrParser.PropComputedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>propComputed</c>
	/// labeled alternative in <see cref="KScrParser.propBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropComputed([NotNull] KScrParser.PropComputedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>propAccessors</c>
	/// labeled alternative in <see cref="KScrParser.propBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropAccessors([NotNull] KScrParser.PropAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>propAccessors</c>
	/// labeled alternative in <see cref="KScrParser.propBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropAccessors([NotNull] KScrParser.PropAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>propFieldStyle</c>
	/// labeled alternative in <see cref="KScrParser.propBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropFieldStyle([NotNull] KScrParser.PropFieldStyleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>propFieldStyle</c>
	/// labeled alternative in <see cref="KScrParser.propBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropFieldStyle([NotNull] KScrParser.PropFieldStyleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.propertyDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyDecl([NotNull] KScrParser.PropertyDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.propertyDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyDecl([NotNull] KScrParser.PropertyDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memProp</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemProp([NotNull] KScrParser.MemPropContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memProp</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemProp([NotNull] KScrParser.MemPropContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memCls</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemCls([NotNull] KScrParser.MemClsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memCls</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemCls([NotNull] KScrParser.MemClsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memInit</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemInit([NotNull] KScrParser.MemInitContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memInit</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemInit([NotNull] KScrParser.MemInitContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memCtor</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemCtor([NotNull] KScrParser.MemCtorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memCtor</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemCtor([NotNull] KScrParser.MemCtorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memMtd</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemMtd([NotNull] KScrParser.MemMtdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memMtd</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemMtd([NotNull] KScrParser.MemMtdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>memIdx</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemIdx([NotNull] KScrParser.MemIdxContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memIdx</c>
	/// labeled alternative in <see cref="KScrParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemIdx([NotNull] KScrParser.MemIdxContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] KScrParser.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] KScrParser.ClassDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFile([NotNull] KScrParser.FileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFile([NotNull] KScrParser.FileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.inferType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInferType([NotNull] KScrParser.InferTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.inferType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInferType([NotNull] KScrParser.InferTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.indexerEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerEmpty([NotNull] KScrParser.IndexerEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.indexerEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerEmpty([NotNull] KScrParser.IndexerEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.indexerDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerDecl([NotNull] KScrParser.IndexerDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.indexerDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerDecl([NotNull] KScrParser.IndexerDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.indexerExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerExpr([NotNull] KScrParser.IndexerExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.indexerExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerExpr([NotNull] KScrParser.IndexerExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast([NotNull] KScrParser.CastContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast([NotNull] KScrParser.CastContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] KScrParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] KScrParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.mutation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMutation([NotNull] KScrParser.MutationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.mutation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMutation([NotNull] KScrParser.MutationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] KScrParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] KScrParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.ctorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtorCall([NotNull] KScrParser.CtorCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.ctorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtorCall([NotNull] KScrParser.CtorCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.newArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewArray([NotNull] KScrParser.NewArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.newArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewArray([NotNull] KScrParser.NewArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.newListedArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewListedArray([NotNull] KScrParser.NewListedArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.newListedArray"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewListedArray([NotNull] KScrParser.NewListedArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] KScrParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] KScrParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>methodRef</c>
	/// labeled alternative in <see cref="KScrParser.lambda"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodRef([NotNull] KScrParser.MethodRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>methodRef</c>
	/// labeled alternative in <see cref="KScrParser.lambda"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodRef([NotNull] KScrParser.MethodRefContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lambdaExpr</c>
	/// labeled alternative in <see cref="KScrParser.lambda"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLambdaExpr([NotNull] KScrParser.LambdaExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lambdaExpr</c>
	/// labeled alternative in <see cref="KScrParser.lambda"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLambdaExpr([NotNull] KScrParser.LambdaExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] KScrParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] KScrParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThrowStatement([NotNull] KScrParser.ThrowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.throwStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThrowStatement([NotNull] KScrParser.ThrowStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.markStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMarkStatement([NotNull] KScrParser.MarkStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.markStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMarkStatement([NotNull] KScrParser.MarkStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpStatement([NotNull] KScrParser.JumpStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpStatement([NotNull] KScrParser.JumpStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.tryCatchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryCatchStatement([NotNull] KScrParser.TryCatchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.tryCatchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryCatchStatement([NotNull] KScrParser.TryCatchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.tryWithResourcesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTryWithResourcesStatement([NotNull] KScrParser.TryWithResourcesStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.tryWithResourcesStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTryWithResourcesStatement([NotNull] KScrParser.TryWithResourcesStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.catchBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatchBlocks([NotNull] KScrParser.CatchBlocksContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.catchBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatchBlocks([NotNull] KScrParser.CatchBlocksContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.catchBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCatchBlock([NotNull] KScrParser.CatchBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.catchBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCatchBlock([NotNull] KScrParser.CatchBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.finallyBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFinallyBlock([NotNull] KScrParser.FinallyBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.finallyBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFinallyBlock([NotNull] KScrParser.FinallyBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] KScrParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] KScrParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] KScrParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] KScrParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] KScrParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] KScrParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] KScrParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] KScrParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.foreachStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachStatement([NotNull] KScrParser.ForeachStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.foreachStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachStatement([NotNull] KScrParser.ForeachStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.doWhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoWhile([NotNull] KScrParser.DoWhileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.doWhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoWhile([NotNull] KScrParser.DoWhileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] KScrParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] KScrParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseClause([NotNull] KScrParser.CaseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseClause([NotNull] KScrParser.CaseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.defaultClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultClause([NotNull] KScrParser.DefaultClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.defaultClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultClause([NotNull] KScrParser.DefaultClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtDeclare</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtDeclare([NotNull] KScrParser.StmtDeclareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtDeclare</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtDeclare([NotNull] KScrParser.StmtDeclareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtAssign</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtAssign([NotNull] KScrParser.StmtAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtAssign</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtAssign([NotNull] KScrParser.StmtAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtAssignTuple</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtAssignTuple([NotNull] KScrParser.StmtAssignTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtAssignTuple</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtAssignTuple([NotNull] KScrParser.StmtAssignTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtCallMember</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtCallMember([NotNull] KScrParser.StmtCallMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtCallMember</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtCallMember([NotNull] KScrParser.StmtCallMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtReturn</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtReturn([NotNull] KScrParser.StmtReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtReturn</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtReturn([NotNull] KScrParser.StmtReturnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtThrow</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtThrow([NotNull] KScrParser.StmtThrowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtThrow</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtThrow([NotNull] KScrParser.StmtThrowContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtMark</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtMark([NotNull] KScrParser.StmtMarkContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtMark</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtMark([NotNull] KScrParser.StmtMarkContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtJump</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtJump([NotNull] KScrParser.StmtJumpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtJump</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtJump([NotNull] KScrParser.StmtJumpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtTryCatch</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtTryCatch([NotNull] KScrParser.StmtTryCatchContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtTryCatch</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtTryCatch([NotNull] KScrParser.StmtTryCatchContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtTryWithRes</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtTryWithRes([NotNull] KScrParser.StmtTryWithResContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtTryWithRes</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtTryWithRes([NotNull] KScrParser.StmtTryWithResContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtIf</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtIf([NotNull] KScrParser.StmtIfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtIf</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtIf([NotNull] KScrParser.StmtIfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtWhile</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtWhile([NotNull] KScrParser.StmtWhileContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtWhile</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtWhile([NotNull] KScrParser.StmtWhileContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtDoWhile</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtDoWhile([NotNull] KScrParser.StmtDoWhileContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtDoWhile</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtDoWhile([NotNull] KScrParser.StmtDoWhileContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtFor</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtFor([NotNull] KScrParser.StmtForContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtFor</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtFor([NotNull] KScrParser.StmtForContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtForeach</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtForeach([NotNull] KScrParser.StmtForeachContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtForeach</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtForeach([NotNull] KScrParser.StmtForeachContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtSwitch</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtSwitch([NotNull] KScrParser.StmtSwitchContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtSwitch</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtSwitch([NotNull] KScrParser.StmtSwitchContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtPipeListen</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtPipeListen([NotNull] KScrParser.StmtPipeListenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtPipeListen</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtPipeListen([NotNull] KScrParser.StmtPipeListenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtPipeRead</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtPipeRead([NotNull] KScrParser.StmtPipeReadContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtPipeRead</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtPipeRead([NotNull] KScrParser.StmtPipeReadContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtPipeWrite</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtPipeWrite([NotNull] KScrParser.StmtPipeWriteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtPipeWrite</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtPipeWrite([NotNull] KScrParser.StmtPipeWriteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stmtEmpty</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmtEmpty([NotNull] KScrParser.StmtEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stmtEmpty</c>
	/// labeled alternative in <see cref="KScrParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmtEmpty([NotNull] KScrParser.StmtEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.typedExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedExpr([NotNull] KScrParser.TypedExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.typedExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedExpr([NotNull] KScrParser.TypedExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parens</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParens([NotNull] KScrParser.ParensContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parens</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParens([NotNull] KScrParser.ParensContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opPostfix</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpPostfix([NotNull] KScrParser.OpPostfixContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opPostfix</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpPostfix([NotNull] KScrParser.OpPostfixContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprCallMember</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprCallMember([NotNull] KScrParser.ExprCallMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprCallMember</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprCallMember([NotNull] KScrParser.ExprCallMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opPrefix</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpPrefix([NotNull] KScrParser.OpPrefixContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opPrefix</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpPrefix([NotNull] KScrParser.OpPrefixContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>readIndexer</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadIndexer([NotNull] KScrParser.ReadIndexerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>readIndexer</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadIndexer([NotNull] KScrParser.ReadIndexerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>newListedArrayValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewListedArrayValue([NotNull] KScrParser.NewListedArrayValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>newListedArrayValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewListedArrayValue([NotNull] KScrParser.NewListedArrayValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprLambda</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprLambda([NotNull] KScrParser.ExprLambdaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprLambda</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprLambda([NotNull] KScrParser.ExprLambdaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>checkInstanceof</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckInstanceof([NotNull] KScrParser.CheckInstanceofContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>checkInstanceof</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckInstanceof([NotNull] KScrParser.CheckInstanceofContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprCast</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprCast([NotNull] KScrParser.ExprCastContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprCast</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprCast([NotNull] KScrParser.ExprCastContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>yieldExpr</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterYieldExpr([NotNull] KScrParser.YieldExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>yieldExpr</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitYieldExpr([NotNull] KScrParser.YieldExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rangeInvoc</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeInvoc([NotNull] KScrParser.RangeInvocContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rangeInvoc</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeInvoc([NotNull] KScrParser.RangeInvocContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opBinaryLate</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpBinaryLate([NotNull] KScrParser.OpBinaryLateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opBinaryLate</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpBinaryLate([NotNull] KScrParser.OpBinaryLateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nativeLitValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNativeLitValue([NotNull] KScrParser.NativeLitValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nativeLitValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNativeLitValue([NotNull] KScrParser.NativeLitValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprPipeListen</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprPipeListen([NotNull] KScrParser.ExprPipeListenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprPipeListen</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprPipeListen([NotNull] KScrParser.ExprPipeListenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprThrow</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprThrow([NotNull] KScrParser.ExprThrowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprThrow</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprThrow([NotNull] KScrParser.ExprThrowContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varAssign</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarAssign([NotNull] KScrParser.VarAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varAssign</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarAssign([NotNull] KScrParser.VarAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>newArrayValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewArrayValue([NotNull] KScrParser.NewArrayValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>newArrayValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewArrayValue([NotNull] KScrParser.NewArrayValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprSwitch</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSwitch([NotNull] KScrParser.ExprSwitchContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprSwitch</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSwitch([NotNull] KScrParser.ExprSwitchContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarValue([NotNull] KScrParser.VarValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarValue([NotNull] KScrParser.VarValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opBinary</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpBinary([NotNull] KScrParser.OpBinaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opBinary</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpBinary([NotNull] KScrParser.OpBinaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varDeclare</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDeclare([NotNull] KScrParser.VarDeclareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varDeclare</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDeclare([NotNull] KScrParser.VarDeclareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprTuple</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprTuple([NotNull] KScrParser.ExprTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprTuple</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprTuple([NotNull] KScrParser.ExprTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeValue([NotNull] KScrParser.TypeValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeValue</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeValue([NotNull] KScrParser.TypeValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>callCtor</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallCtor([NotNull] KScrParser.CallCtorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>callCtor</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallCtor([NotNull] KScrParser.CallCtorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ternary</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTernary([NotNull] KScrParser.TernaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ternary</c>
	/// labeled alternative in <see cref="KScrParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTernary([NotNull] KScrParser.TernaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.tupleDeclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleDeclType([NotNull] KScrParser.TupleDeclTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.tupleDeclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleDeclType([NotNull] KScrParser.TupleDeclTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.tupleDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleDecl([NotNull] KScrParser.TupleDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.tupleDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleDecl([NotNull] KScrParser.TupleDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.tupleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTupleExpr([NotNull] KScrParser.TupleExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.tupleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTupleExpr([NotNull] KScrParser.TupleExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opMultiply</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpMultiply([NotNull] KScrParser.OpMultiplyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opMultiply</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpMultiply([NotNull] KScrParser.OpMultiplyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opDivide</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpDivide([NotNull] KScrParser.OpDivideContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opDivide</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpDivide([NotNull] KScrParser.OpDivideContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opModulus</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpModulus([NotNull] KScrParser.OpModulusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opModulus</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpModulus([NotNull] KScrParser.OpModulusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opBitAnd</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpBitAnd([NotNull] KScrParser.OpBitAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opBitAnd</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpBitAnd([NotNull] KScrParser.OpBitAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opBitOr</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpBitOr([NotNull] KScrParser.OpBitOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opBitOr</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpBitOr([NotNull] KScrParser.OpBitOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opBitNot</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpBitNot([NotNull] KScrParser.OpBitNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opBitNot</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpBitNot([NotNull] KScrParser.OpBitNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLogicAnd</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLogicAnd([NotNull] KScrParser.OpLogicAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLogicAnd</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLogicAnd([NotNull] KScrParser.OpLogicAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLogicOr</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLogicOr([NotNull] KScrParser.OpLogicOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLogicOr</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLogicOr([NotNull] KScrParser.OpLogicOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opPow</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpPow([NotNull] KScrParser.OpPowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opPow</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpPow([NotNull] KScrParser.OpPowContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opEqual</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpEqual([NotNull] KScrParser.OpEqualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opEqual</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpEqual([NotNull] KScrParser.OpEqualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opInequal</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpInequal([NotNull] KScrParser.OpInequalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opInequal</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpInequal([NotNull] KScrParser.OpInequalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opGreaterEq</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpGreaterEq([NotNull] KScrParser.OpGreaterEqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opGreaterEq</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpGreaterEq([NotNull] KScrParser.OpGreaterEqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLesserEq</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLesserEq([NotNull] KScrParser.OpLesserEqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLesserEq</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLesserEq([NotNull] KScrParser.OpLesserEqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opGreater</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpGreater([NotNull] KScrParser.OpGreaterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opGreater</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpGreater([NotNull] KScrParser.OpGreaterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLesser</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLesser([NotNull] KScrParser.OpLesserContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLesser</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLesser([NotNull] KScrParser.OpLesserContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLShift([NotNull] KScrParser.OpLShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLShift([NotNull] KScrParser.OpLShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opRShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpRShift([NotNull] KScrParser.OpRShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opRShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpRShift([NotNull] KScrParser.OpRShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opULShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpULShift([NotNull] KScrParser.OpULShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opULShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpULShift([NotNull] KScrParser.OpULShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opURShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpURShift([NotNull] KScrParser.OpURShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opURShift</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpURShift([NotNull] KScrParser.OpURShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opNullFallback</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpNullFallback([NotNull] KScrParser.OpNullFallbackContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opNullFallback</c>
	/// labeled alternative in <see cref="KScrParser.binaryop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpNullFallback([NotNull] KScrParser.OpNullFallbackContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opPlus</c>
	/// labeled alternative in <see cref="KScrParser.binaryop_late"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpPlus([NotNull] KScrParser.OpPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opPlus</c>
	/// labeled alternative in <see cref="KScrParser.binaryop_late"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpPlus([NotNull] KScrParser.OpPlusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opMinus</c>
	/// labeled alternative in <see cref="KScrParser.binaryop_late"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpMinus([NotNull] KScrParser.OpMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opMinus</c>
	/// labeled alternative in <see cref="KScrParser.binaryop_late"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpMinus([NotNull] KScrParser.OpMinusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opArithNot</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpArithNot([NotNull] KScrParser.OpArithNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opArithNot</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpArithNot([NotNull] KScrParser.OpArithNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opLogicNot</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpLogicNot([NotNull] KScrParser.OpLogicNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opLogicNot</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpLogicNot([NotNull] KScrParser.OpLogicNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opIncrRead</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpIncrRead([NotNull] KScrParser.OpIncrReadContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opIncrRead</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpIncrRead([NotNull] KScrParser.OpIncrReadContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opDecrRead</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpDecrRead([NotNull] KScrParser.OpDecrReadContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opDecrRead</c>
	/// labeled alternative in <see cref="KScrParser.prefixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpDecrRead([NotNull] KScrParser.OpDecrReadContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opReadIncr</c>
	/// labeled alternative in <see cref="KScrParser.postfixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpReadIncr([NotNull] KScrParser.OpReadIncrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opReadIncr</c>
	/// labeled alternative in <see cref="KScrParser.postfixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpReadIncr([NotNull] KScrParser.OpReadIncrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>opReadDecr</c>
	/// labeled alternative in <see cref="KScrParser.postfixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpReadDecr([NotNull] KScrParser.OpReadDecrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>opReadDecr</c>
	/// labeled alternative in <see cref="KScrParser.postfixop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpReadDecr([NotNull] KScrParser.OpReadDecrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId([NotNull] KScrParser.IdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId([NotNull] KScrParser.IdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.idPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdPart([NotNull] KScrParser.IdPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.idPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdPart([NotNull] KScrParser.IdPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] KScrParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] KScrParser.ArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="KScrParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTuple([NotNull] KScrParser.TupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="KScrParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTuple([NotNull] KScrParser.TupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitTuple</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitTuple([NotNull] KScrParser.NumTypeLitTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitTuple</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitTuple([NotNull] KScrParser.NumTypeLitTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitByte</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitByte([NotNull] KScrParser.NumTypeLitByteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitByte</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitByte([NotNull] KScrParser.NumTypeLitByteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitShort</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitShort([NotNull] KScrParser.NumTypeLitShortContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitShort</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitShort([NotNull] KScrParser.NumTypeLitShortContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitInt</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitInt([NotNull] KScrParser.NumTypeLitIntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitInt</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitInt([NotNull] KScrParser.NumTypeLitIntContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitLong</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitLong([NotNull] KScrParser.NumTypeLitLongContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitLong</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitLong([NotNull] KScrParser.NumTypeLitLongContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitFloat</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitFloat([NotNull] KScrParser.NumTypeLitFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitFloat</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitFloat([NotNull] KScrParser.NumTypeLitFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numTypeLitDouble</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumTypeLitDouble([NotNull] KScrParser.NumTypeLitDoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numTypeLitDouble</c>
	/// labeled alternative in <see cref="KScrParser.num"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumTypeLitDouble([NotNull] KScrParser.NumTypeLitDoubleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitObject</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitObject([NotNull] KScrParser.TypeLitObjectContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitObject</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitObject([NotNull] KScrParser.TypeLitObjectContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitArray</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitArray([NotNull] KScrParser.TypeLitArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitArray</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitArray([NotNull] KScrParser.TypeLitArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitTuple</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitTuple([NotNull] KScrParser.TypeLitTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitTuple</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitTuple([NotNull] KScrParser.TypeLitTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitNum</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitNum([NotNull] KScrParser.TypeLitNumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitNum</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitNum([NotNull] KScrParser.TypeLitNumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitType</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitType([NotNull] KScrParser.TypeLitTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitType</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitType([NotNull] KScrParser.TypeLitTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitEnum</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitEnum([NotNull] KScrParser.TypeLitEnumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitEnum</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitEnum([NotNull] KScrParser.TypeLitEnumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>typeLitVoid</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLitVoid([NotNull] KScrParser.TypeLitVoidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeLitVoid</c>
	/// labeled alternative in <see cref="KScrParser.primitiveTypeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLitVoid([NotNull] KScrParser.TypeLitVoidContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varThis</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarThis([NotNull] KScrParser.VarThisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varThis</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarThis([NotNull] KScrParser.VarThisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varSuper</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarSuper([NotNull] KScrParser.VarSuperContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varSuper</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarSuper([NotNull] KScrParser.VarSuperContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitNum</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitNum([NotNull] KScrParser.VarLitNumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitNum</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitNum([NotNull] KScrParser.VarLitNumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitTrue</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitTrue([NotNull] KScrParser.VarLitTrueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitTrue</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitTrue([NotNull] KScrParser.VarLitTrueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitFalse</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitFalse([NotNull] KScrParser.VarLitFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitFalse</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitFalse([NotNull] KScrParser.VarLitFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitStr</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitStr([NotNull] KScrParser.VarLitStrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitStr</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitStr([NotNull] KScrParser.VarLitStrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitStdio</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitStdio([NotNull] KScrParser.VarLitStdioContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitStdio</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitStdio([NotNull] KScrParser.VarLitStdioContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitEndl</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitEndl([NotNull] KScrParser.VarLitEndlContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitEndl</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitEndl([NotNull] KScrParser.VarLitEndlContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varLitNull</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarLitNull([NotNull] KScrParser.VarLitNullContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varLitNull</c>
	/// labeled alternative in <see cref="KScrParser.primitiveLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarLitNull([NotNull] KScrParser.VarLitNullContext context);
}
} // namespace KScr.Antlr
